from email import message
from gc import callbacks

import telebot
from telebot import types
from telebot.apihelper import send_message

bot = telebot.TeleBot('7618745443:AAHb315qHE3E3Le5bFapyyhB_imUlCwWqgo')

markup = types.InlineKeyboardMarkup()
btn_1 = types.InlineKeyboardButton('‚ñ∂Ô∏è Youtube', callback_data='dlyou')
btn_2 = types.InlineKeyboardButton('üì∏ Instagram', callback_data='dlins')
btn_3 = types.InlineKeyboardButton('üé∂ TikTok', callback_data='dltik')
markup.row(btn_1)
markup.row(btn_2, btn_3)


# markup_1 = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
# btn_1 = types.KeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å üéµ')
# btn_2 = types.KeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å üé•')
# markup_1.row(btn_1, btn_2)

markup_2 = types.InlineKeyboardMarkup()
btn_1 = types.InlineKeyboardButton('360p üìπ', callback_data='360p')
btn_2 = types.InlineKeyboardButton('480p üìΩ', callback_data='480p')
btn_3 = types.InlineKeyboardButton('720p üé•', callback_data='720p')
markup_2.add(btn_1, btn_2, btn_3)





@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id,
        f'<strong>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!</strong>'
        f'\n–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞.\n–í—ã–±–µ—Ä–∏, –∏–∑ –∫–∞–∫–æ–π —Å–æ—Ü—Å–µ—Ç–∏ –º—ã –±—É–¥–µ–º —Å–∫–∞—á–∏–≤–∞—Ç—å ü§ñ:',parse_mode='html',
        reply_markup=markup
    )
@bot.message_handler(commands=['more'])
def more(message):
    bot.send_message(message.chat.id,
        f'<strong>–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å</strong> ü§ñ:\n',parse_mode='html',
        reply_markup=markup
    )


# @bot.callback_query_handler(func=lambda call: True)
# def callback(call):
#     # if call.data == 'dlyou':
#         bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç',reply_markup=markup_1)
#



@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.data == 'dlyou':
        bot.edit_message_text('<b>‚ñ∂Ô∏è YouTube\n–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Å—ã–ª–∫—É...</b>',call.message.chat.id, call.message.message_id,parse_mode='html')
    elif call.data == 'dlins':
        bot.edit_message_text('<b>üì∏ Instagram\n–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Å—ã–ª–∫—É...</b>',call.message.chat.id, call.message.message_id,parse_mode='html')
    elif call.data == 'dltik':
        bot.edit_message_text('<b>üé∂ TikTok\n–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Å—ã–ª–∫—É...</b>',call.message.chat.id, call.message.message_id,parse_mode='html')
    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=markup_2)















# @bot.message_handler(commands=['info'])
# def info(message):
#     bot.send_message(
#         message.chat.id,
#         f'<strong>–í–∞—à–µ –∏–º—è: {message.from_user.first_name}\nID: {message.from_user.id}</strong>',
#         parse_mode='html'
#     )

@bot.message_handler(func=lambda message: True)
def unknown_message(message):
    bot.send_message(
        message.chat.id,
        f'<strong>{message.from_user.first_name}, —è –ø–æ–∫–∞ —á—Ç–æ –Ω–µ —É–º–µ—é –æ–±—â–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π üòä, –Ω–æ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —è —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Å–º–æ–≥—É –Ω–∞—É—á–∏—Ç—å—Å—è! üöÄ</strong>',
        parse_mode='html'
    )


bot.polling(none_stop=True)